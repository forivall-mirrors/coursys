<% if @hsts %>
add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
<% end %>

# from https://ssl-config.mozilla.org/
ssl_session_timeout 1d;
ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
ssl_session_tickets off;
ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
ssl_prefer_server_ciphers off;
ssl_dhparam /etc/nginx/dhparams.pem;
ssl_stapling on;
ssl_stapling_verify on;

<% @all_names.each do |name| %>
include /etc/nginx/sites-available/<%= name %>.conf;
<% end %>

server {
        # redirect HTTP to HTTPS
        listen 80;
        server_name _;
        access_log <%= @data_root %>/nginx-logs/http.access.log;
        error_log <%= @data_root %>/nginx-logs/http.error.log warn;
        return 301 https://<%= @true_domain_name %>:<%= @https_port %>$request_uri;
}

server {
        # redirect any other requests to domain name URL (shouldn't happen, and cert will be invalid)
        server_name _;
        listen <%= @https_port %> ssl default_server;
        ssl_certificate      /etc/nginx/insecure.crt;
        ssl_certificate_key  /etc/nginx/insecure.key;

        access_log <%= @data_root %>/nginx-logs/default-https.access.log;
        error_log <%= @data_root %>/nginx-logs/default-https.error.log warn;

        return 301 https://<%= @true_domain_name %>:<%= @https_port %>$request_uri;
}
